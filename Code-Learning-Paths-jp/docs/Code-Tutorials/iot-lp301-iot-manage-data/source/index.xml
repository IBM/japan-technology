<dw-document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" local-site="worldwide" version="v18"><dw-article layout="ArticleStandard18" toc="auto"><id cma-id="1055549" original="yes"/><keywords content="iot, data stores, analytics, rules, manage data"/><meta-last-updated day="03" initials="corbinm@us.ibm.com" month="01" year="2018"/><content-area-primary name="iot"/><title>Making sense of IoT data</title><subtitle>Storing IoT data, analyzing IoT data, and applying rules to act on your
            IoT data</subtitle><pdf pages="7" paperSize="common" size="187 KB" url="iot-lp301-iot-manage-data-pdf.pdf"/><author email="anna.m.gerber@gmail.com" email-cc="" jobtitle="Senior Software Developer" publish-email="no"><author-level>none</author-level><bio>Anna Gerber is a full-stack developer with 15 years experience in the
                university sector, formerly a Technical Project Manager at The University
                of Queensland ITEE eResearch specialising in Digital Humanities, and a
                Research Scientist at the Distributed System Technology Centre (DSTC).
                Anna is a JavaScript robotics enthusiast and maker and enjoys tinkering
                with soft circuits and 3D printers.</bio><img align="left" alt="Anna Gerber" height="60" src="https://www.ibm.com/developerworks/i/p-agerber60.jpg" valign="top" width="60"/><author-name><GivenName>Anna</GivenName><FamilyName>Gerber</FamilyName></author-name><company-name/><social-networks><social-network><social-network-name>dW author profile</social-network-name><social-network-url>https://developer.ibm.com/author/anna.m.gerber/</social-network-url></social-network></social-networks></author><date-published day="19" month="12" year="2017"/><date-updated day="03" month="01" year="2018"/><social-media-meta><twitter-summary-card><twitter-card-title>Making sense of IoT data</twitter-card-title><twitter-card-abstract>IoT solutions are most successful when they do
                    something with all that data that is generated, when they make sense
                    of all that data. In this article, learn best practices in storing,
                    analyzing, and applying rules to take action on your IoT
                    data.</twitter-card-abstract><twitter-card-img height="440" src="https://www.ibm.com/developerworks/i/twitterdw-topic-iot.png" width="880"/></twitter-summary-card></social-media-meta><abstract>IoT solutions are most successful when they do something with all that
            data that is generated, when they make sense of all that data. In this
            article, learn best practices in storing, analyzing, and applying rules to
            take action on your IoT data.</abstract><docbody><sidebar><heading>IoT 301: Mastering IoT development</heading><p>This article is part of the <a href="https://www.ibm.com/developerworks/library/iot-lp301-mastery-guide-iot-developers/index.html" target="_blank">IoT 301 learning path</a>, an advanced developer
                    guide for IoT.</p><ul><li><a href="https://developer.ibm.com/dwblog/2017/getting-serious-iot-development/" target="_blank">Get serious</a></li><li><a href="https://developer.ibm.com/dwblog/2017/iot-security-challenges/" target="_blank">IoT security challenges</a></li><li><a href="https://www.ibm.com/developerworks/library/iot-lp301-iot-device-management/index.html" target="_blank">IoT device management</a></li><li>IoT analytics (this article)</li><li><a href="https://www.ibm.com/developerworks/library/iot-lp301-mastering-skills-extend-iot-health-app/" target="_blank">Tutorial: Extend an IoT system</a></li></ul></sidebar><p>As more and more things are connected to the Internet of Things, the volume
                of data associated with and generated by IoT devices, including device
                statuses, metadata, and sensor readings, is increasing exponentially.
                Managing and making sense of this data is essential if IoT solutions are
                to deliver value. </p><p>Data analytics can be applied to IoT data to generate dashboards, reports,
                visualizations, and alerts, to monitor the health and status of connected
                devices, and to provide visibility for sensor readings. Analytics are used
                to identify patterns, detect anomalies, and predict outcomes from the
                data, as well to trigger actions through the application of rules. </p><p>In this article, I'll describe some of the approaches for dealing with IoT
                data, including storing data, processing and analyzing data, and applying
                rules. </p><heading alttoc="" inline-commenting-id="cmt_1" refname="1Storingdataoutline" type="h2">Storing data</heading><p>IoT devices typically have limited data storage capabilities, so the bulk
                of the data acquired by IoT devices needs to be communicated using <a href="https://www.ibm.com/developerworks/library/iot-lp101-connectivity-network-protocols/">communication protocols</a> such as MQTT or CoAP, and then ingested
                by IoT services for further processing and storage. More data is being
                stored and accessed by IoT apps and services than ever before.</p><p>Dealing with the increased volume of data is not the only concern with
                managing stored IoT data. Other considerations include: </p><ul><li>Dealing with heterogeneous data </li><li>Transforming, aggregating, and integrating data in order to prepare it
                    for analytics while keeping track of data provenance </li><li>Securing the data to maintain the integrity and privacy of the
                    data</li><li>Selecting storage technologies to ensure a balance between high
                    performance, reliability, flexibility and scalability and cost.</li></ul><p>Read more <a href="http://it.toolbox.com/blogs/inside-erp/six-tips-for-storing-iot-data-74302">tips for storing IoT data</a>.</p><heading alttoc="" inline-commenting-id="cmt_2" refname="11Heterogeneousdataoutline" type="h3">Heterogeneous data</heading><p>The data captured by IoT devices is produced in a mix of data formats,
                including structured, semi-structured, and unstructured data. This data
                might include discrete sensor readings, device health metadata, or large
                files for images or video. Because IoT data is not uniform, no
                one-size-fits-all approach exists for storing IoT data.</p><heading alttoc="" inline-commenting-id="cmt_2" refname="12Transformingdataoutline" type="h3">Transforming data</heading><p>Data is usually transformed on the device or at device gateways to perform
                normalization. Events may need to be re-ordered if they have been received
                out of order, and if data is time sensitive, stale data might be dropped. </p><p>Provenance information about the sensor that captured the data, as well as
                location and timestamp for the data, is often attached at this point too.
                It is useful to store raw data for debugging and historical analytics
                purposes, but storing the pre-processed data will avoid having to repeat
                expensive transformations if the data should need to be analyzed more than
                once. </p><p>Be sure to transform your data and then be selective about which data to
                transmit and store to save on bandwidth and storage costs.</p><heading alttoc="" inline-commenting-id="cmt_2" refname="13Securingdataoutline" type="h3">Securing data</heading><p>Data must be transmitted and stored securely in order to maintain data
                integrity and privacy, using secure protocols and encryption. Read more in
                    "<a href="https://www.ibm.com/developerworks/library/iot-trs-secure-iot-solutions2/">Securing IoT data over the network</a>" on IBM developerWorks.</p><heading alttoc="" inline-commenting-id="cmt_2" refname="14Datastoragetechnologiesoutline" type="h3">Data storage technologies</heading><p>Because IoT solutions are complex, you'll need to use a combination of data
                storage strategies. </p><p>Data storage technologies that you use for data stored temporarily at the
                edge while it is being processed on devices and gateways will need to be
                physically robust (to withstand the often harsh operating environments in
                which devices are installed), but also fast and reliable so that
                pre-processing of data can be performed quickly and accurately before data
                is sent upstream. Device data storage can take advantage of
                next-generation non-volatile RAM (NVRAM) technologies such as 3D X Point
                and ReRAM, which are up to 1000 times faster than NAND flash but consume
                less power than DRAM.</p><p>Once IoT data is transmitted from the device that generates it, it can be
                stored in the cloud, on premises, or a hybrid of the two. </p><p>Data is likely destined for different purposes. Data that is intended for
                archival purposes rather than real-time analytics can be stored using
                different approaches that complement the analytics approach that will be
                adopted. Data access needs to be fast and support querying for discrete
                real-time data analytics. Storage technologies adopted for this data
                should support concurrent reads and writes, be highly available, and
                include indexes that can be configured to optimize data access and query
                performance. </p><p>High volume archival data can be stored on cloud storage that may be slower
                to access but it has the advantage of being lower cost and elastic so it
                will scale as the volume of data increases. Access to large file format
                data like video is usually sequential, so this data might be stored using
                object storage (such as <a href="https://wiki.openstack.org/wiki/Swift">OpenStack Object Storage known as Swift</a>), or written directly to
                a distributed file system like Hadoop HDFS or IBM GPFS. Data warehouse
                tools like <a href="https://hive.apache.org/">Apache Hive</a> can assist
                with managing reading, writing, and accessing data that is stored on
                distributed storage.</p><p>Data storage technologies that are often adopted for IoT event data include
                NoSQL databases and time series databases. </p><ul><li><strong>NoSQL databases</strong> are a popular choice for IoT data
                    used for analytics because they support high throughput and low
                    latency, and their schema-less approach is flexible, allowing new
                    types of data to be added dynamically. Open source NoSQL databases
                    used for IoT data include <a href="https://www.couchbase.com/">Couchbase</a>, <a href="http://cassandra.apache.org/">Apache
                        Cassandra</a>, <a href="http://couchdb.apache.org/">Apache
                        CouchDB</a>, <a href="https://www.mongodb.com/">MongoDB</a> and <a href="https://hbase.apache.org/">Apache HBase</a>, which is the
                    NoSQL database for Hadoop. Hosted NoSQL cloud storage solutions
                    include <a href="https://www.ibm.com/cloud/cloudant">IBM's
                        Cloudant</a> database and <a href="https://aws.amazon.com/dynamodb/">AWS DynamoDB</a>.</li><li><strong>Time series databases</strong> can be relational or based on a
                    NoSQL approach. They are designed specifically for indexing and
                    querying time-based data, which is ideal for most IoT sensor data,
                    which is temporal in nature. Time series databases used for IoT data
                    include <a href="https://www.influxdata.com/">InfluxDB</a>, <a href="http://opentsdb.net/">OpenTSB</a>, <a href="http://basho.com/products/riak-ts/">Riak</a>, <a href="https://prometheus.io/">Prometheus</a> and <a href="https://graphiteapp.org/">Graphite</a>.</li></ul><p>Read more about Apache Cassandra in this IBM developerWorks tutorial, "<a href="https://www.ibm.com/developerworks/library/ba-set-up-apache-cassandra-architecture/index.html">Set up a basic Apache Cassandra architecture</a>."</p><heading alttoc="" inline-commenting-id="cmt_2" refname="2Analyzingdataoutline" type="h2">Analyzing data</heading><p>IoT data needs to be analyzed in order to make it useful, but manually
                processing the flood of data produced by IoT devices is not practical. So,
                most IoT solutions rely on automated analytics. </p><p>Analytics tools are applied to IoT data including device status data and
                sensor readings, to generate descriptive reports, to present data through
                dashboards and data visualizations, and to trigger alerts and actions. </p><p>Many different open source analytics frameworks or IoT platforms can be
                used to provide IoT data processing and analytics to your IoT solutions.
                Analytics can be performed in real-time as the data is received or through
                batch processing of historical data. Analytics approaches include
                distributed analytics, real-time analytics, edge analytics, and machine
                learning.</p><heading alttoc="" inline-commenting-id="cmt_3" refname="21Distributedanalyticsoutline" type="h3">Distributed analytics</heading><p>Distributed analytics is necessary in IoT systems to analyze data at scale,
                particularly when dealing with historical data that is too vast to be
                stored or processed by a single node. Data can be spread across multiple
                databases; for example, device data might be bucketed into databases for
                each device per time period, such as hourly, daily, or monthly, like the
                IBM Watson IoT <a href="https://developer.ibm.com/recipes/tutorials/cloudant-nosql-db-as-historian-data-storage-for-ibm-watson-iot-parti/">Historian Service</a> that connects to Cloudant NoSQL database that
                stores the IoT data. Analytics may involve aggregating results which are
                distributed across multiple geographical locations. You'll want to adopt a
                storage driver or analytics framework that bridges distributed storage and
                compute infrastructure to allow seamless querying across distributed
                databases. </p><p>Of particular note for processing of distributed data are the ecosystem of
                frameworks arising from the Hadoop community. Apache <a href="http://hadoop.apache.org/">Hadoop</a> is a batch processing
                framework that uses a MapReduce engine to process distributed data. It was
                one of the first open source frameworks to take off for big data
                analytics. Hadoop is ideal for historical IoT data analytics where time
                sensitivity is not an issue, such as performing analysis over a complete
                set of data and producing a result at a later time. </p><label name="22outline"/><heading alttoc="" inline-commenting-id="cmt_3" refname="23Real-timeanalyticsoutline" type="h3">Real-time analytics</heading><p>Analytics for high-volume IoT data streams is often performed in real-time,
                particularly if the stream includes time-sensitive data, where batch
                processing of data would produce results too late to be useful or any
                other application where latency is a concern. </p><p>Real-time analytics are also ideal for time series data, because unlike
                batch processing, real-time analytics tools usually support controlling
                the window of time analysis, and calculating rolling metrics, for example,
                to track hourly averages over time rather than calculating a single
                average across an entire dataset.</p><p>Frameworks that are designed for real-time stream analytics include <a href="http://storm.apache.org/">Apache Storm</a> and <a href="http://samza.apache.org/">Apache Samza</a> (usually used with
                Kafka and Hadoop YARN). Hybrid engines that can be used for either stream
                or batch analytics include <a href="http://apex.apache.org/">Apache
                    Apex</a>, <a href="http://spark.apache.org/">Apache Spark</a>, and <a href="https://flink.apache.org/">Apache Flink</a>. <a href="https://kafka.apache.org/">Apache Kafka</a> acts as an ingestion
                layer that can sit over the top of an engine like Spark, Storm or Hadoop.
                For a guide to selecting between these open source frameworks, read <a href="https://www.ibm.com/blogs/bluemix/2017/07/choosing-right-platform-high-performance-cost-effective-stream-processing-applications/">Choosing the right platform for high-performance, cost-effective
                    stream processing applications</a>.</p><heading alttoc="" inline-commenting-id="cmt_3" refname="24Edgeanalyticsoutline" type="h3">Edge analytics</heading><p>IoT analytics is not usually applied to raw device data. The data is
                pre-processed to filter out duplicates or to re-order, aggregate or
                normalize the data prior to analysis. This processing typically occurs at
                the point of acquisition, on the IoT devices themselves or on gateway
                devices that aggregate the data, to determine which data needs to be sent
                upstream. </p><p>Analytics applied at the edges of the network, as close as possible to the
                devices generating the data is known as <em>edge analytics</em>. IBM's
                Watson IoT Platform includes an <a href="https://developer.ibm.com/iotplatform/edge-analytics-sdk/">Edge
                    Analytics SDK</a>. <a href="https://developer.ibm.com/open/apache-edgent/">Apache Edgent</a>
                (previously known as Quarks), is one example of an open source,
                lightweight embedded analytics engine designed to be used on IoT devices
                and gateways. Analytics is also on the roadmap for the Linux Foundation's
                    <a href="https://www.edgexfoundry.org/">EdgeX Foundry</a>, an open
                source IoT edge computing framework.</p><p>Edge analytics is low-latency and reduces bandwidth requirements because
                not as much data needs to be transmitted from the device. However,
                constrained devices have limited processing capacity, so most IoT
                solutions use a hybrid approach involving edge analytics and upstream
                analytics.</p><heading alttoc="" inline-commenting-id="cmt_3" refname="25Machinelearningoutline" type="h3">Machine learning</heading><p>Using traditional mathematical statistical models for analytics provides
                value as they can be used to track goals, create reports and insights,
                predict trends, and create simulations that are used to predict and
                optimize for specific outcomes. For example, you can predict the outcome
                of applying a specific action, predict the time to failure for a given
                piece of equipment, or optimize the configuration of an IoT system in
                terms of cost or performance. However, the value of statistical analytics
                models diminishes when applied to dynamic data that contains many
                variables that change over time, when you don't know what factors to look
                for, or what variables to change to achieve a desired outcome like
                reducing cost or improving efficiency. In these cases, instead of using a
                statistical model, machine learning algorithms that learn from the data
                can be applied.</p><p>Machine learning can be applied to historic or real-time data. Machine
                learning techniques can be used to identify patterns, identify key
                variables and relationships between them to automatically create and
                refine analytics models, and then use those model for simulations or to
                produce decisions. Machine learning approaches have the advantage over
                static statistical analytics models that as new data comes in, the models
                can be improved over time, which leads to improved results.</p><p>Machine learning approaches include: </p><ul><li><strong>Neural networks.</strong> Neural networks are networks of
                    nodes that take data as input and produce a decision or result as
                    output. The neural network is trained with data to produce a desired
                    outcome.</li><li><strong>Deep learning.</strong> Deep learning is like a neural
                    network, but with more hidden layers between the inputs and
                    outputs.</li><li><strong>Long short term memory (LSTM). </strong> LSTM networks use
                    feedback loops to include some memory to give them some context when
                    processing time-series data.</li></ul><sidebar><p>Read this use case of applying <a href="https://www-01.ibm.com/common/ssi/cgi-bin/ssialias?subtype=AB&amp;infotype=PM&amp;htmlfid=WWC12356USEN&amp;attachment=WWC12356USEN.PDF">SystemML and Apache Spark to IoT data to track retail customer
                        behaviour and improve the customer experience</a>.</p></sidebar><p>Watch the <a href="https://developer.ibm.com/tv/iot-dataanalysis-in-real-time-using-deeplearning/">IoT Data Analysis in real time using Deep Learning</a> keynote to
                find out more about these different approaches, or read more about <a href="https://www.ibm.com/developerworks/library/iot-deep-learning-anomaly-detection-1/">detecting anomalies in IoT time-series data by using deep
                    learning</a> in this developerWorks tutorial.</p><p>Standalone open source deep learning frameworks for IoT include <a href="https://www.tensorflow.org/">TensorFlow</a>, <a href="http://pytorch.org/">PyTorch</a>, <a href="http://deeplearning.net/software/theano/">Theano</a> or
                Cognitive Toolkit <a href="https://github.com/Microsoft/cntk">CNTK</a>.
                Machine learning tools are also available that run over the top of Apache
                Spark, for example, the <a href="https://www.h2o.ai/">H20</a> and <a href="https://deeplearning4j.org/">DeepLearning4J</a> deep learning
                engines, and <a href="http://systemml.apache.org/">SystemML</a>.</p><label name="3outline"/><heading alttoc="" inline-commenting-id="cmt_4" refname="4Actingonthedatabyapplyingrulesoutline" type="h2">Acting on the data by applying
                rules</heading><p>Rule engines use the insights discovered from IoT data through analytics,
                and apply rules to produce accurate, repeatable decisions. There are a
                variety of approaches to implementing rules for IoT:</p><ul><li><a href="https://en.wikipedia.org/wiki/Decision_tree">Decision
                        trees</a>. Decision points are represented using a tree (that is,
                    a hierarchical graph-based structure), to represent decision points.
                    Each leaf in the tree structure corresponds with a decision.</li></ul><p> Decision trees grow exponentially as the possible number of variable
                states being tracked increases.</p><ul><li><a href="https://software.intel.com/en-us/node/517348">Data flow
                        graphs</a>. Data flow graphs (also known as pipes) are used to
                    represent the data dependencies and flow between functions. An example
                    of a framework that is built on data flow graphs is <a href="https://www.tensorflow.org/">TensorFlow</a>.</li><li><a href="https://en.wikipedia.org/wiki/Complex_event_processing">Complex Event Processing (CEP)</a>. CEP is often used for
                    processing time series data, and it is a good fit for applying rules
                    to real-time sensor data.</li><li><a href="https://en.wikipedia.org/wiki/Inference_engine">Inference
                        Engines</a>. implement If-then-style rules.</li><li><a href="https://en.wikipedia.org/wiki/Business_process_management">Business Process Management</a>. In the context of a traditional
                    BPM system, rules are often implemented as decision tables.</li></ul><p>Regardless of the engine's implementation, rules encode conditions that are
                used to trigger actions that autonomously make adjustments to a system to
                work around issues, maximize performance, or optimize costs. </p><p>Open source analytics and rules engines can be self-managed; however, many
                IoT platforms offer hosted analytics and rules solutions based around open
                source offerings, such as <a href="https://www.ibm.com/cloud/spark">IBM's
                    Analytics for Apache Spark</a>. IoT Platforms also typically include
                custom integrated analytics solutions, incorporating both batch and
                real-time analytics as well as machine learning and rules. Some examples
                of IoT platforms that include these capabilities include:</p><ul><li><a href="http://www.oracle.com/technetwork/middleware/complex-event-processing/documentation/index.html">Oracle Edge Analytics and Stream Analytics</a></li><li><a href="https://azure.microsoft.com/en-au/services/stream-analytics/">Azure Stream Analytics</a></li><li><a href="https://aws.amazon.com/iot-platform/">AWS IoT</a></li><li><a href="https://cloud.google.com/dataflow/">Google Cloud
                    Dataflow</a></li><li><a href="https://developer.ibm.com/iotplatform/2017/03/15/watson-iot-platform-analytics-covering-iot-analytics-needs/">IBM Watson IoT Platform Analytics</a></li></ul><heading alttoc="" inline-commenting-id="cmt_5" refname="5Conclusionoutline" type="h2">Conclusion</heading><p>I've provided an overview of tools and approaches for making sense of IoT
                data, including managing data, using analytics to gain insights, and
                applying rules to perform actions.</p><p>IoT data analytics is essential to the management of large scale, complex
                IoT systems like <a href="https://www.ibm.com/developerworks/library/iot-lp201-iot-connected-cities/">connected cities</a>, where analytics are used to predict demand and
                rules are applied to adjust services in response, such as to control
                adaptive traffic signals or manage smart lighting. </p><p>IoT data analytics improve efficiency in smaller-scale IoT systems too. For
                example, for predictive maintenance of <a href="https://www.ibm.com/internet-of-things/industries/iot-manufacturing">industrial equipment</a> or <a href="https://www.ibm.com/internet-of-things/industries/iot-automotive">automotive</a> fleets, sensor data installed on assets is used to
                predict when they will need to be serviced which allows maintenance to be
                scheduled at optimal times, which improves reliability, and which avoids
                the expense of unnecessary maintenance and reduces downtime and
                productivity loss. </p><heading alttoc="" inline-commenting-id="cmt_6" refname="6Relatedtopicsoutline" type="h2">Related topics</heading><ul><li><a href="https://developer.ibm.com/clouddataservices/">Watson Data
                        Platform: Solutions for storing and analyzing your IoT
                    data</a></li><li><a href="https://www.ibm.com/developerworks/library/iot-deep-learning-anomaly-detection-1/">developerWorks series: Developing cognitive IoT solutions for
                        anomaly detection using deep learning</a></li><li><a href="https://developer.ibm.com/recipes/tutorials/using-ibm-watson-analytics-to-visualize-data-from-watson-iot-platform/">Using IBM Watson Analytics to visualize data from Watson IoT
                        Platform</a></li><li><a href="https://developer.ibm.com/recipes/tutorials/visualizing-and-understanding-data-from-ibm-watson-iot-platform-by-using-ibm-data-science-experience/">Visualizing and understanding data from IBM Watson IoT Platform
                        by using IBM Data Science Experience</a></li><li><a href="https://developer.ibm.com/iotplatform/2016/11/16/new-recipes-on-storing-and-visualising-historical-data-using-ibm-watson-iot-and-ibm-cloudant/">developerWorks recipes for storing and visualizing historical
                        data using IBM Watson IoT Platform and IBM Cloudant</a></li></ul></docbody></dw-article><!-- PUB_TO_MAV --></dw-document>